require(minfi)
require(minfiData)
baseDir <- system.file("extdata",package="minfiData")
targets <- read.450k.sheet(baseDir)
RGSet <- read.450k.exp(base = baseDir, targets = targets)
gset.funnorm <- preprocessFunnorm(RGSet)
gset.funnorm@annotation
gset.funnorm@trans <- function(x){return(x);}
setClass("BMarray", contains = "SummarizedExperiment",
representation(trans="function", parameters="list", annotation = "vector"))
B = new("BMarray")
B
B@annotation
typeof(gset.funnorm@annotation)
setClass("BMarray", contains = "SummarizedExperiment",
representation(trans="function", parameters="list", annotation = "character"))
B = new("BMarray")
B@annotation
gset.funnorm@annotation[1]
B@annotation <- unlist(list(array = "IlluminaHumanMethylation450k", annotation = "ilmn12.hg19"))
B
B@annotation
get(paste(B@annotation))
get(paste(B@annotation[1], B@annotation[2]))
get(paste(B@annotation[1], B@annotation[2], sep="."))
get(paste(B@annotation[1], B@annotation[2], sep=""))
sprintf("%sanno.%s", object@annotation["array"], object@annotation["annotation"])
object = B
sprintf("%sanno.%s", object@annotation["array"], object@annotation["annotation"])
get(sprintf("%sanno.%s", object@annotation["array"], object@annotation["annotation"]))
get(sprintf("%sanno.%s", object@annotation["array"], object@annotation["annotation"])) -> A
A
A@data
A@annotation
A@defaults
A@data
A@data$Islands.UCSC
A@data$Locations
gset.funnorm@rowData
dmr
dmrs
GRanges
pheno <- pData(gset.funnorm)$status
designMatrix <- model.matrix(~ pheno)
dmrs <- bumphunter(gset.funnorm, design = designMatrix,cutoff = 0.2, B=0, type="Beta")
dmrs
dmrs$table
gset.funnorm@rowData
head(dmrs$table)
?IRanges
A@data$Locations
M = getMethSignal(gset.funnorm, "M")
head(M)
M[181000:181033,]
M[181000,]
head(M[181000:181033,])
A@data$Locations["cg01957732",]
A@data$Locations["cg24842760",]
A@data$Locations["cg24842760":,]
A@data$Locations[181000,]
A@data$Islands.UCSC[181000,]
Relation_to_Island(A@data$Islands.UCSC[181000,])
A@data$Islands.UCSC
c("cg14820573","cg14747225","cg16670573","cg09499248","cg00762468","cg05055400","cg09969830")->t
A@data$Islands.UCSC[t,]
A@data$Islands.UCSC[t,][,"Islands_Name"]
unique(A@data$Islands.UCSC[t,][,"Islands_Name"])
paste(unique(A@data$Islands.UCSC[t,][,"Islands_Name"]), ";")
paste(unique(A@data$Islands.UCSC[t,][,"Islands_Name"]), collaspe = ";")
paste(unique(A@data$Islands.UCSC[t,][,"Relation_to_Island"]), collaspe = ";")
paste(unique(A@data$Islands.UCSC[t,][,"Relation_to_Island"]), collapse = ";")
A@annotation
get(paste(B@annotation[1], B@annotation[2]))
get(paste(B@annotation[1], B@annotation[2], sep="."))
B@annotation[1], B@annotation[2]
B@annotation[1]B@annotation[2]
B@annotation[1]
B@annotation[2]
gset.funnorm@annotation
gset.funnorm@annotation -> annotation
get(sprintf("%sanno.%s", a["array"], a["annotation"]))
get(sprintf("%sanno.%s", annotation["array"], annotation["annotation"]))
sprintf("%sanno.%s", annotation["array"], annotation["annotation"])
get(sprintf("%sanno.%s", annotation["array"], annotation["annotation"]))
get
showMethods("get")
?get
library(GO.db)
showMethods(450K.db)
library(450K.db)
chr
chr = as.factor(seqnames(result))
source("http://bioconductor.org/biocLite.R")
biocLite("shinyMethyl")
browseVignettes("shinyMethyl")
library(shinyMethyl)library(shinyMethylData)
library(shinyMethyl)
library(shinyMethylData)
source("http://bioconductor.org/biocLite.R")
biocLite("shinyMethylData")
summary <- shinySummarize(RGsetEx)
library(minfiData)
summary <- shinySummarize(RGsetEx)
runShinyMethyl(summary)
polygon
?polygon
x <- c(1:9, 8:1)
y <- c(1, 2*(5:3), 2, -1, 17, 9, 8, 2:9)
op <- par(mfcol = c(3, 1))
for(xpd in c(FALSE, TRUE, NA)) {
plot(1:10, main = paste("xpd =", xpd))
box("figure", col = "pink", lwd = 3)
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
}
par(op)
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
density = c(10, 20), angle = c(-45, 45))
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
col = c("red", "blue"),
border = c("green", "yellow"),
lwd = 3, lty = c("dashed", "solid"))
par(op)
n <- 100
xx <- c(0:n, n:0)
yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot   (xx, yy, type = "n", xlab = "Time", ylab = "Distance")
polygon(xx, yy, col = "gray", border = "red")
curve(dnorm(x,0,1))
curve(dnorm(x,0,1),xlim=c(-3,3),main='Normal Density')
cord.x <- c(cord.x,-3)
cord.x <- c(-3,seq(-3,-2,0.01),-2)
cord.x
cord.y <- c(0,dnorm(seq(-3,-2,0.01)),0)
cord.y
curve(dnorm(x,0,1),xlim=c(-3,3),main='Standard Normal')
polygon(cord.x,cord.y,col='skyblue')
library(heatmap3)
?heatmap3
set.seed(123456789)
rnormData<-matrix(rnorm(1000), 40, 25)
rnormData[1:15, seq(6, 25, 2)] = rnormData[1:15, seq(6, 25, 2)] + 2
rnormData[16:40, seq(7, 25, 2)] = rnormData[16:40, seq(7, 25, 2)] + 4
colnames(rnormData)<-c(paste("Control", 1:5, sep = ""), paste(c("TrtA", "TrtB"),
rep(1:10,each=2), sep = ""))
rownames(rnormData)<-paste("Probe", 1:40, sep = "")
ColSideColors<-c(rep("steelblue2",5), rep(c("brown1", "mediumpurple2"),10))
#A simple example
heatmap3(rnormData,ColSideColors=ColSideColors,showRowDendro=FALSE)
library(shinyMethyl)
library(shinyMethyl)library(shinyMethylData)runShinyMethyl(summary.tcga.raw, summary.tcga.norm)
library(shinyMethyl)
install.packages("shiny")
library(shinyMethylData)
runShinyMethyl(summary.tcga.raw, summary.tcga.norm)
library(shinyMethyl)
library(shinyMethylData)
runShinyMethyl(summary.tcga.raw, summary.tcga.norm)
library(shinyMethylData)
runShinyMethyl(summary.tcga.raw, summary.tcga.norm)
library(shinyMethylData)
runShinyMethyl(summary.tcga.raw, summary.tcga.norm)
setwd("./Desktop/ProposalEEN572/")
library(knitr)
knit2pdf("Proposal.Rnw")
